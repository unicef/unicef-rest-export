version: 2
database: &database
  - image: circleci/postgres:9.5-alpine
    environment:
      POSTGRES_USER: postgres
      PGUSER: postgres
      POSTGRES_DB: test_unicef_rest_export
      POSTGRES_PASSWORD: postgres

jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/python:3.6
        environment:
          PGHOST: 127.0.0.1
          DATABASE_URL: "postgres://postgres:postgres@localhost:5432/test_unicef_rest_export"
          RELEASE_MATCH: "release/*"
      <<: *database
    steps:
      - checkout
      - run:
          name: run tests
          command: |
            export PATH=$PATH:/home/circleci/.local/bin
            pip install tox --user
            tox -r
      - deploy:
          name: tag and release if release candidate
          command: |
              if [[ $CIRCLE_BRANCH == $RELEASE_MATCH ]]; then
                curl --user ${CIRCLE_TOKEN}: \
                  --fail \
                  --data build_parameters[CIRCLE_JOB]=tag \
                  --data revision=$CIRCLE_SHA1 \
                  https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/$CIRCLE_BRANCH
              else
                echo "Skipped as '$CIRCLE_BRANCH' does not match '$RELEASE_MATCH' branch"
              fi
  tag:
    working_directory: ~/code
    docker:
      - image: circleci/python:3.6
        environment:
          API_URL: https://api.github.com/repos/unicef/unicef-rest-export
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "16:e1:12:cd:51:9f:11:92:ed:7a:2b:d8:70:ae:4c:28"
      - run:
          name: package and release
          command: |
            export PATH=/home/circleci/.local/bin:$PATH
            export TAG=${TAG:=${CIRCLE_BRANCH#*/}}
            git status
            git show-branch release/$TAG
            if [ $? -eq 0 ];then
              git reset --hard

              git config user.email "ci@unicef.org"
              git config user.name "CI"

              git checkout master
              git merge --no-ff release/$TAG -m "merge release/$TAG"
              git tag -a -m "v$TAG" $TAG
              git checkout develop
              git merge --no-ff release/$TAG -m "merge release/$TAG"
              git push origin --verbose --all
              git push origin --verbose --tags
              git push origin --verbose --delete release/$TAG
            fi
      - run:
          name: release
          command: |
            export TAG=${TAG:=${CIRCLE_BRANCH#*/}}
            export TODAY=`date '+%d %B %Y at %H:%M'`
            function is_pre()
            {
                [[ "$(echo "$TAG" | sed 's/[0-9.]//g')" == "" ]] && echo false || echo true
            }
            function data() {
            cat <<EOF
            { "tag_name": "$TAG",
              "name": "v$TAG",
              "body": "version $TAG - Built on $TODAY",
              "draft": false,
              "prerelease": $(is_pre)
            }
            EOF
            }
            data=$(data)
            curl -X POST -s \
              --fail --verbose \
              -H "Accept: application/json" \
              -H "Content-Type:application/json" \
              -H "Authorization: token ${GITHUB_TOKEN}" \
              ${API_URL}/releases \
              -d "$data"
      - run:
          name: init .pypirc
          command: |
            echo -e "[distutils]" >> ~/.pypirc
            echo -e "index-servers =" >> ~/.pypirc
            echo -e "    pypi" >> ~/.pypirc
            echo -e "" >> ~/.pypirc
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username: $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password: $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create and upload package
          command: |
            python setup.py sdist upload
